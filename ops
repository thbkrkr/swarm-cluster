#!/bin/bash -u

ENV=bim
NAME=$ENV-ops

BULWARK=$ENV-keystore-1

DOPS=krkr/dops

update() {
  docker pull $DOPS
}

local_start() {
  docker run --rm -ti \
    --hostname "$(hostname)-ops" \
    --name "local-$NAME" \
    -v $(pwd):/ops \
    -v $(pwd)/bin:/root/bin \
    -v $(pwd)/ansible/ansible.cfg:/etc/ansible/ansible.cfg \
    --env-file=$(pwd)/machines/creds/$ENV-os-creds.env \
    -e MACHINE_STORAGE_PATH=/ops/machines/$ENV \
    -e ANSIBLE_HOST_KEY_CHECKING=False \
    -e MACHINE=$ENV-node-1 \
    -e ENV=$ENV \
    $DOPS
}

start() {
  docker run -d \
    --hostname bulwark-$BULWARK-ops \
    --name "bulwark-$NAME" \
    --env-file=/ops/machines/creds/$ENV-os-creds.env \
    krkr/$NAME
}

dexec() {
  local cmd="${@:-zsh}"
  docker exec -ti $NAME "$cmd"
}

isStarted() {
  docker ps -a --filter=name=$NAME | grep "${NAME}$" | wc -l
}

main() {
  local cmd="$@"

  if [[ -f /.dockerinit ]]; then
    echo "[ops] Config env for $BULWARK..."
    DNAME=bulwark-$NAME
    MACHINE=$BULWARK source _denv.sh
  else
    DNAME=local-$NAME
    sudo chown -R $USER:$USER .
  fi

  case $cmd in
    "build")
      echo "[ops] Build $ENV-dops..."
      docker build -t krkr/$NAME --build-arg ENV=$ENV .
      exit 0
      ;;
  esac

  # Start
  if [ $(isStarted) -ne 1 ]; then
    if [[ -f /.dockerinit ]]; then
      echo "[ops] Start $NAME in docker..."
      start
    else
      echo "[ops] Start $NAME local..."
      DNAME=local-$NAME
      local_start
    fi
    exit 0
  fi

  if [[ "$cmd" == "" ]]; then
    echo "[ops] Join existing $NAME local..."
    docker exec -ti $DNAME start zsh
  else
    now=$(date +%s)
    event='"time":'$now',"type":"exec","cmd": "'$@'"'
    sha1=$(sha1sum <<< $event | cut -c-12)

    # Execution
    docker exec -ti $NAME "$@" #&> .output.ops

    duration=$(expr $(date +%s) - $now)

    case $? in
      0) level=info ;;
      *) level=error ;;
    esac
  fi

  get::output() {
    cat .output.ops | jq .
  }

  echo '{
    "id":"'$sha1'",
    "date":"'$now'",
    "level":"'$level'",
    "kind":"ops",
    "cmd":"'$@'",
    "duration":"'$duration'"
  }'
    #"output":"'$(get::output)'",
}

main "$@"
